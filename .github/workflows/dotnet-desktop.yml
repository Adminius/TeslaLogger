name: .NET Core Desktop

on:
  workflow_dispatch:
  push:
    branches: [ "master","TeslaFleetAPI"]
  pull_request:
    branches: [ "master", "TeslaFleetAPI"]

jobs:
  build:

    strategy:
      matrix:
        configuration: [Debug]

    runs-on: windows-2019  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: TeslaLogger.sln                         # Replace with your solution name, i.e. MyWpfApp.sln.
      Test_Project_Path: UnitTestsTeslalogger\UnitTestsTeslalogger.csproj                 # Replace with the path to your test project, i.e. MyWpfApp.Tests\MyWpfApp.Tests.csproj.
     
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install Chocolatey
      run: |
        Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))

    - name: Install MySQL
      run: |
        choco install choco install mariadb -y --version=10.0.1
        RefreshEnv


    - name: Configure MariaDB (Set root password)
      run: |
        "C:\Program Files\MariaDB 10.0\bin\mysqladmin.exe" -u root password "teslalogger"

    - name: Create test database
      run: |
        "C:\Program Files\MariaDB 10.0\bin\mysql.exe" -u root -pteslalogger -e "CREATE DATABASE test_db;"

    - name: Run SQL commands
      run: |
        "C:\Program Files\MariaDB 10.0\bin\mysql.exe" -u root -pteslalogger test_db -e "CREATE TABLE sample_table (id INT PRIMARY KEY, name VARCHAR(50));"
        "C:\Program Files\MariaDB 10.0\bin\mysql.exe" -u root -pteslalogger test_db -e "INSERT INTO sample_table VALUES (1, 'GitHub Actions with MariaDB');"
        "C:\Program Files\MariaDB 10.0\bin\mysql.exe" -u root -pteslalogger test_db -e "SELECT * FROM sample_table;"

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2    
    
    - name: Setup Nuget
      uses: Nuget/setup-nuget@v1.0.5

    - name: Restore nuget packages
      run: nuget restore TeslaLogger.sln
    
    - name: Build solution
      run: msbuild TeslaLogger.sln -t:rebuild -property:Configuration=Debug

    # Execute all unit tests in the solution
    - name: Execute unit tests
      run: dotnet test --filter "UnitTestsGeocode|UnitTestGrafana|UnitTestBase|UnitTestTelemetryParser" --logger trx --logger console UnitTestsTeslalogger\bin\Debug\UnitTestsTeslalogger.dll
      #run: dotnet vstest /Tests:UnitTestsGeocode /Logger:trx UnitTestsTeslalogger\bin\Debug\UnitTestsTeslalogger.dll

    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action/windows@v2
      if: always()
      with:
        files: |
          **/TestResults/**/*.xml
          **/TestResults/*.trx
          **/TestResults/**/*.json

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with: 
        name: Teslalogger
        path: TeslaLogger\bin\Debug\TeslaLogger.exe
      
