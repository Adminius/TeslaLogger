name: .NET Core Desktop

on:
  workflow_dispatch:
  push:
    branches: [ "master","TeslaFleetAPI"]
  pull_request:
    branches: [ "master", "TeslaFleetAPI"]

jobs:
  build:

    strategy:
      matrix:
        configuration: [Debug]

    runs-on: windows-2019  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    services:
      mysql:
        image: mariadb:10.4.7
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        env:
          MYSQL_ROOT_PASSWORD: teslalogger
          MYSQL_DATABASE: teslalogger
          MYSQL_USER: teslalogger
          MYSQL_PASSWORD: teslalogger

    env:
      Solution_Name: TeslaLogger.sln                         # Replace with your solution name, i.e. MyWpfApp.sln.
      Test_Project_Path: UnitTestsTeslalogger\UnitTestsTeslalogger.csproj                 # Replace with the path to your test project, i.e. MyWpfApp.Tests\MyWpfApp.Tests.csproj.
     
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install MySQL client
      run: |
        choco install mysql --version=8.0
        mysql --version

    - name: Wait for MySQL to start
      run: |
        echo "Waiting for MySQL service to be ready..."
        for i in {1..10}; do
          mysqladmin ping -h localhost -u root --password=root && break || sleep 5
        done

    - name: Run MySQL commands
      run: |
        mysql -h localhost -u root --password=root -e "SHOW DATABASES;"
        mysql -h localhost -u root --password=root -e "CREATE TABLE test_db.sample_table (id INT PRIMARY KEY, name VARCHAR(50));"
        mysql -h localhost -u root --password=root -e "INSERT INTO test_db.sample_table VALUES (1, 'GitHub Actions');"
        mysql -h localhost -u root --password=root -e "SELECT * FROM test_db.sample_table;"

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2    
    
    - name: Setup Nuget
      uses: Nuget/setup-nuget@v1.0.5

    - name: Restore nuget packages
      run: nuget restore TeslaLogger.sln
    
    - name: Build solution
      run: msbuild TeslaLogger.sln -t:rebuild -property:Configuration=Debug

    # Execute all unit tests in the solution
    - name: Execute unit tests
      run: dotnet test --filter "UnitTestsGeocode|UnitTestGrafana|UnitTestBase|UnitTestTelemetryParser" --logger trx --logger console UnitTestsTeslalogger\bin\Debug\UnitTestsTeslalogger.dll
      #run: dotnet vstest /Tests:UnitTestsGeocode /Logger:trx UnitTestsTeslalogger\bin\Debug\UnitTestsTeslalogger.dll

    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action/windows@v2
      if: always()
      with:
        files: |
          **/TestResults/**/*.xml
          **/TestResults/*.trx
          **/TestResults/**/*.json

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with: 
        name: Teslalogger
        path: TeslaLogger\bin\Debug\TeslaLogger.exe
      
